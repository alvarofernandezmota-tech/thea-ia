services:
  theaia-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: theaia-app
    restart: unless-stopped

    ports:
      - "8000:8000"

    # Variables esenciales
    environment:
      - ENVIRONMENT=development
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    # Carga el resto desde .env (incluye TELEGRAM_*, DATABASE_URL, etc.)
    env_file:
      - .env

    depends_on:
      - postgres
      - redis

    volumes:
      - ./logs:/app/logs
      - ./models:/app/models

    networks:
      - theaia-network

    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8000/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: theaia-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: theaia_db
      POSTGRES_USER: theaia_user
      POSTGRES_PASSWORD: theaia_password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - theaia-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U theaia_user -d theaia_db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: theaia-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password
    volumes:
      - redis_data:/data
    networks:
      - theaia-network
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "ping" ]
      interval: 10s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  redis_data:


networks:
  theaia-network:
    driver: bridge
